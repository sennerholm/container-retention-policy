name: Test action main branch

on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  clean:
    runs-on: ubuntu-latest
    name: Ubuntu with classic personal access token
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: sennerholm/container-retention-policy@fetch-digests
        name: Delete test-1-* and untagged images with a temporal token
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          cut-off: 30m
          image-names: container-retention-policy
          image-tags: '!fetch-digests !multi-* !test-2* !test-3* !test-4* !test-5*'
          tag-selection: both
          timestamp-to-use: created_at
          dry-run: true
          rust-log: container_retention_policy=debug

      - uses: sennerholm/container-retention-policy@fetch-digests
        name: Delete multi-2 or not because it's part of multi-1
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          cut-off: 30m
          image-names: container-retention-policy
          image-tags: '!fetch-digests !multi-1 !test-2* !test-3* !test-4* !test-5*'
          tag-selection: both
          timestamp-to-use: created_at
          dry-run: true
          rust-log: container_retention_policy=debug
  
      - uses: sennerholm/container-retention-policy@fetch-digests
        name: Delete all except fetch-digests
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          cut-off: 30m
          image-names: container-retention-policy
          image-tags: '!fetch-digests'
          tag-selection: both
          timestamp-to-use: created_at
          dry-run: true
          rust-log: container_retention_policy=debug          
          
  produce:
    runs-on: ubuntu-latest
    name: Upload more test images
    steps:
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build empty images
        run: |
          for ((i=1; i<=5; i++))
          do
            randomString=$(LC_ALL=C tr -dc A-Za-z0-9 </dev/urandom | head -c 10 2>/dev/null || echo RANDOM)
            {
              echo "FROM alpine AS builder"
              echo "RUN echo \"$randomString\" > test.txt"
              echo "FROM scratch"
              echo "COPY --from=builder /test.txt ."
            } > Dockerfile

            imageName="ghcr.io/sennerholm/container-retention-policy:test-${i}"

            docker build -f Dockerfile -t "$imageName" --push .

            for ((j=1; j<=3; j++))
            do
              docker tag "$imageName" "ghcr.io/sennerholm/container-retention-policy:test-${i}-${j}"
              docker push "ghcr.io/sennerholm/container-retention-policy:test-${i}-${j}"
            done
          done
